// Mocks generated by Mockito 5.0.16 from annotations
// in the_resident_zombie/test/features/user/presentation/contact_list/bloc/contact_list_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:the_resident_zombie/core/error/failures.dart' as _i7;
import 'package:the_resident_zombie/core/params/confirmation.dart' as _i11;
import 'package:the_resident_zombie/features/user/domain/entities/user_entity.dart'
    as _i9;
import 'package:the_resident_zombie/features/user/domain/repositories/user_repository.dart'
    as _i2;
import 'package:the_resident_zombie/features/user/domain/usecases/flag_user_as_infected_usecase.dart'
    as _i10;
import 'package:the_resident_zombie/features/user/domain/usecases/get_all_contacts_usecase.dart'
    as _i8;
import 'package:the_resident_zombie/features/user/domain/usecases/get_user_by_id_usecase.dart'
    as _i4;
import 'package:the_resident_zombie/features/user/domain/usecases/save_contact_usecase.dart'
    as _i5;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeUserRepository_0 extends _i1.Fake implements _i2.UserRepository {}

class _FakeEither_1<L, R> extends _i1.Fake implements _i3.Either<L, R> {}

class _FakeGetUserByIdUseCase_2 extends _i1.Fake
    implements _i4.GetUserByIdUseCase {}

/// A class which mocks [SaveContactUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveContactUsecase extends _i1.Mock
    implements _i5.SaveContactUsecase {
  MockSaveContactUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.UserRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeUserRepository_0()) as _i2.UserRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, String>> call(
          _i5.ParamsSaveContact? params) =>
      (super.noSuchMethod(Invocation.method(#call, [params]),
              returnValue: Future<_i3.Either<_i7.Failure, String>>.value(
                  _FakeEither_1<_i7.Failure, String>()))
          as _i6.Future<_i3.Either<_i7.Failure, String>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [GetAllContactsUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAllContactsUsecase extends _i1.Mock
    implements _i8.GetAllContactsUsecase {
  MockGetAllContactsUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.UserRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeUserRepository_0()) as _i2.UserRepository);
  @override
  _i4.GetUserByIdUseCase get getUserByIdUseCase =>
      (super.noSuchMethod(Invocation.getter(#getUserByIdUseCase),
          returnValue: _FakeGetUserByIdUseCase_2()) as _i4.GetUserByIdUseCase);
  @override
  _i6.Future<_i3.Either<_i7.Failure, List<_i9.UserEntity>>> call(
          _i8.GetAllContactsParams? params) =>
      (super.noSuchMethod(Invocation.method(#call, [params]),
              returnValue:
                  Future<_i3.Either<_i7.Failure, List<_i9.UserEntity>>>.value(
                      _FakeEither_1<_i7.Failure, List<_i9.UserEntity>>()))
          as _i6.Future<_i3.Either<_i7.Failure, List<_i9.UserEntity>>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [FlagUserAsInfectedUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlagUserAsInfectedUseCase extends _i1.Mock
    implements _i10.FlagUserAsInfectedUseCase {
  MockFlagUserAsInfectedUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.UserRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeUserRepository_0()) as _i2.UserRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, _i11.Confirmation>> call(
          _i10.FlagParams? params) =>
      (super.noSuchMethod(Invocation.method(#call, [params]),
          returnValue: Future<_i3.Either<_i7.Failure, _i11.Confirmation>>.value(
              _FakeEither_1<_i7.Failure, _i11.Confirmation>())) as _i6
          .Future<_i3.Either<_i7.Failure, _i11.Confirmation>>);
  @override
  String toString() => super.toString();
}
