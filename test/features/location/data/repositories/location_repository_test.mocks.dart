// Mocks generated by Mockito 5.0.16 from annotations
// in the_resident_zombie/test/features/location/data/repositories/location_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:the_resident_zombie/features/location/data/datasources/local_location_data_source.dart'
    as _i3;
import 'package:the_resident_zombie/features/location/data/datasources/remote_location_data_source.dart'
    as _i5;
import 'package:the_resident_zombie/features/location/data/models/location_model.dart'
    as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeLocationModel_0 extends _i1.Fake implements _i2.LocationModel {}

/// A class which mocks [LocalLocationDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalLocationDataSource extends _i1.Mock
    implements _i3.LocalLocationDataSource {
  MockLocalLocationDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.LocationModel> getCurrentLocation() => (super.noSuchMethod(
          Invocation.method(#getCurrentLocation, []),
          returnValue: Future<_i2.LocationModel>.value(_FakeLocationModel_0()))
      as _i4.Future<_i2.LocationModel>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [RemoteLocationDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteLocationDataSource extends _i1.Mock
    implements _i5.RemoteLocationDataSource {
  MockRemoteLocationDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.LocationModel> getLocationFromId(String? id) =>
      (super.noSuchMethod(Invocation.method(#getLocationFromId, [id]),
              returnValue:
                  Future<_i2.LocationModel>.value(_FakeLocationModel_0()))
          as _i4.Future<_i2.LocationModel>);
  @override
  String toString() => super.toString();
}
